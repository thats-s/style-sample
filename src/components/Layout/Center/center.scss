@use "../../../scss/global/index" as g;

/* -----------------------------------------------------------------------
 * Layout / Center
 * -------------------------------------------------------------------- */
$l-center-color-list: (
  bg-container: g.$color-mercury,
  bg-content: g.$color-white,
  border-centering-item: g.$color-magenta-fuchsia,
);

.l-center {
  @each $key, $value in $l-center-color-list {
    --color-l-center-#{$key}: #{$value};
  }

  &.container {
    min-height: 200px;
    padding: 10px;
    background-color: var(--color-l-center-bg-container);
    border: 1px solid var(--color-l-center-border-centering-item);
    border-radius: 5px;
    @include g.resize-elm();
  }

  > .content {
    padding: 15px;
    background-color: var(--color-l-center-bg-content);
    border-radius: 5px;
    @include g.reset-margin();
  }
}

@mixin root($className) {
  .l-center {
    &.#{$className} {
      @content;
    }
  }
}

/* ------------------------------------
 * Content Center
 * --------------------------------- */
@include root("content-center") {
  display: grid;
  gap: 10px;
  place-content: center;
}

/* ------------------------------------
 * Gentle Flex
 * --------------------------------- */
@include root("gentle-flex") {
  display: flex;
  flex-direction: column;
  gap: 10px;
  align-items: center;
  justify-content: center;
}

/* ------------------------------------
 * Autobot
 * --------------------------------- */
@include root("autobot") {
  display: flex;

  > .content {
    margin: auto;
  }
}

/* ------------------------------------
 * Fluffy Center
 * --------------------------------- */
@include root("fluffy-center") {
  padding: 15vmin;
  border: none;

  > .content {
    border: 1px solid var(--color-l-center-border-centering-item);
  }
}

/* ------------------------------------
 * Pop & Plop
 * --------------------------------- */
@include root("pop-plop") {
  position: relative;

  > .content {
    position: absolute;
    top: 50%;
    left: 50%;
    border: 1px solid var(--color-l-center-border-centering-item);
    transform: translate(-50%, -50%);
  }
}
